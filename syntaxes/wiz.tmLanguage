<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>comment</key>
    <string>Wiz</string>    
    <key>fileTypes</key>
    <array>
        <string>wiz</string>
    </array>
    <key>foldingStartMarker</key>
    <string></string>
    <key>foldingStopMarker</key>
    <string></string>
    <key>name</key>
    <string>wiz</string>
    <key>patterns</key>
    <array>
        <dict>
            <key>include</key>
            <string>#wiz_comment_doc_block</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#wiz_comment_block</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#wiz_string</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#wiz_char</string>
        </dict>        
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.control.wiz</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.wiz</string>
                </dict>
            </dict>
            <key>match</key>
            <string>\b(func)\s+([a-zA-Z_][a-zA-Z_0-9]*)\b</string>
            <key>name</key>
            <string>meta.function.wiz</string>
        </dict>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.control.wiz</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.wiz</string>
                </dict>
            </dict>
            <key>match</key>
            <string>\b(namespace)\s+([a-zA-Z_][a-zA-Z_0-9]*)\b</string>
            <key>name</key>
            <string>meta.namespace.wiz</string>
        </dict>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.control.wiz</string>
                </dict>                
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>keyword.control.wiz</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>varible.other.wiz</string>
                </dict>
            </dict>
            <key>match</key>
            <string>\b(extern\s+)?(var|bank|const|enum|let|struct|union|writeonly)\s+([a-zA-Z_][a-zA-Z_0-9]*)\b</string>
            <key>name</key>
            <string>meta.variable.wiz</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b(zero|carry|interrupt|interrupt_mode|interrupt_page|nointerrupt|overflow|negative|decimal|a|b|c|d|e|h|l|sp|hl|ix|iy|af|bc|de|x|y|s|p|mpr0|mpr1|mpr2|mpr3|mpr4|mpr5|mpr6|mpr7|vdc0|vdc1|vdc2)\b</string>
            <key>name</key>
            <string>support.class.wiz</string>
        </dict>                
        <dict>
            <key>match</key>
            <string>\b(bank|const|embed|enum|export|far|func|import|let|namespace|private|public|struct|union|var)\b</string>
            <key>name</key>
            <string>keyword.other.wiz</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b(break|case|continue|config|do|default|else|for|goto|if|in|inline|irqreturn|nmireturn|return|while)\b</string>
            <key>name</key>
            <string>keyword.control.wiz</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b(alignof|as|by|is|sizeof|typeof|offsetof)\b</string>
            <key>name</key>
            <string>keyword.operator.wiz</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b(false|true)\b</string>
            <key>name</key>
            <string>constant.language.wiz</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b(wiz)\b</string>
            <key>name</key>
            <string>variable.language.wiz</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b(i8|i16|i32|i64|iexpr|range|u8|u16|u32|u64|bool|void|vardata|varinitdata|constdata|prgdata|chrdata)\b</string>
            <key>name</key>
            <string>storage.type.wiz</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b[0-9][0-9_]*(i8|i16|i32|i64|u8|u16|u32|u64)?\b</string>
            <key>name</key>
            <string>constant.numeric.integer.decimal.wiz</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b0x[0-9a-fA-F_]*(i8|i16|i32|i64|u8|u16|u32|u64)?\b</string>
            <key>name</key>
            <string>constant.numeric.integer.hexadecimal.wiz</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b0o[0-7_]*(i8|i16|i32|i64|u8|u16|u32|u64)?\b</string>
            <key>name</key>
            <string>constant.numeric.integer.octal.wiz</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b0b[0-1_]*(i8|i16|i32|i64|u8|u16|u32|u64)?\b</string>
            <key>name</key>
            <string>constant.numeric.integer.binary.wiz</string>
        </dict>
        <dict>
            <key>begin</key>
            <string>//[!/][^/].*</string>
            <key>end</key>
            <string>$</string>
            <key>name</key>
            <string>comment.line.documentation.wiz</string>
        </dict>
        <dict>
            <key>begin</key>
            <string>//</string>
            <key>end</key>
            <string>$</string>
            <key>name</key>
            <string>comment.line.double-slash.wiz</string>
        </dict>
        <dict>
            <key>match</key>
            <string>[()-=&lt;&gt;&amp;|!~@.,;:?+*/%^'#$\[\]{}]|\b_\b</string>
            <key>name</key>
            <string>keyword.operator.wiz</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b[a-zA-Z_][a-zA-Z0-9_]*(?=\()</string>
            <key>name</key>
            <string>support.function.wiz</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b[a-zA-Z_][a-zA-Z0-9_]*</string>
            <key>name</key>
            <string>meta.default.wiz</string>
        </dict>
    </array>
    <key>repository</key>
    <dict>
        <key>wiz_comment_block</key>
        <dict>
            <key>begin</key>
            <string>/\*</string>
            <key>end</key>
            <string>\*/</string>
            <key>name</key>
            <string>comment.block.wiz</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#wiz_comment_block</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#wiz_comment_doc_block</string>
                </dict>
            </array>
        </dict>
        <key>wiz_comment_doc_block</key>
        <dict>
            <key>begin</key>
            <string>/\*[!\*][^\*/]</string>
            <key>end</key>
            <string>\*/</string>
            <key>name</key>
            <string>comment.block.documentation.wiz</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#wiz_comment_block</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#wiz_comment_doc_block</string>
                </dict>
            </array>
        </dict>
        <key>wiz_escape_sequence</key>
        <dict>
            <key>match</key>
            <string>\\(x\h{2}|t|r|n|f|b|a|0|"|'|\\)</string>
            <key>name</key>
            <string>constant.character.escape.wiz</string>
        </dict>        
        <key>wiz_string</key>
        <dict>
            <key>begin</key>
            <string>"</string>
            <key>end</key>
            <string>"</string>
            <key>name</key>
            <string>string.quoted.double.wiz</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#wiz_escape_sequence</string>
                </dict>
            </array>
        </dict>
        <key>wiz_char</key>
        <dict>
            <key>begin</key>
            <string>'</string>
            <key>end</key>
            <string>'</string>
            <key>name</key>
            <string>string.quoted.single.wiz</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#wiz_escape_sequence</string>
                </dict>
            </array>
        </dict>        
    </dict>
    <key>scopeName</key>
    <string>source.wiz</string>
    <key>uuid</key>
    <string>252090ff-62d6-424e-b241-83fe4069edaa</string>
</dict>
</plist>